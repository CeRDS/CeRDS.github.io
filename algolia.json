[{"content":"Characterisation eResearch \u0026amp;amp; Data Science As part of the Center for Microscopy, Characterisation and Analysis within The University of Western Australia, we enable research excellence by providing world-class microscopy and microanalysis facilities and expertise to publicly funded researchers and industry.\n","date":1632361500,"description":"","lastmod":"2021-09-23T09:45:00+08:00","objectID":"3976528693a0108357f4928017600865","permalink":"https://www.cerds.org.au/","publishdate":"2021-09-23T09:45:00+08:00","title":"CeRDS"},{"content":"The Australian Characterisation Commons at Scale (ACCS) project aims to resolve the big-data challenges faced by microscopy facilities by providing tools, best practice guides, specialised training and knowledge sharing.\nThis project is supported through the ARDC Research Platforms program.\n","date":1634650860,"description":"","lastmod":"2021-10-19T21:41:00+08:00","objectID":"28080c5661c2c3479dd27d01670296bb","permalink":"https://www.cerds.org.au/accs/","title":"The Australian Characterisation Commons at Scale (ACCS)"},{"content":"Characterisation Virtual Laboratory (CVL) @UWA is a part of the Characterisation Virtual Laboratory National project. It is hosted at the Pawsey Supercomputing Centre primarily within the Nimbus Cloud Service.\nThis section outlines the UWA implementation of CVL housed at Pawsey. It contains details about design decisions, workflows, tools and other miscellaneous material.\n","date":1632360780,"description":"","lastmod":"2021-09-23T09:33:00+08:00","objectID":"640775de2fb3081ce3521d12a206230f","permalink":"https://www.cerds.org.au/accs/cvl/","publishdate":"2021-09-23T09:33:00+08:00","title":"Characterisation Virtual Laboratory (CVL@UWA)"},{"content":"","date":1632360780,"description":"","lastmod":"2021-09-23T09:33:00+08:00","objectID":"4e8cd9126cfd4992dd3ea356ada969c2","permalink":"https://www.cerds.org.au/accs/cvl/tech/","publishdate":"2021-09-23T09:33:00+08:00","title":"Technical documents"},{"content":"Client configuration # ~/.ansible.cfg # https://docs.ansible.com/ansible/latest/reference_appendices/config.html # ansible-doc -t cache -l # ansible-doc -t cache \u0026amp;lt;plugin name\u0026amp;gt; # [defaults] fact_caching = jsonfile fact_caching_connection = ~/.ansible/tmp/cache force_valid_group_names = ignore #force_valid_group_names = silently gathering = smart inventory = ~/.ansible/hosts #inventory = ~/.ansible/hosts,~/.ansible/vagrant_inventory.py log_path = ~/.ansible/tmp/ansible.log remote_user = ubuntu roles_path = ~/.ansible/roles:~/accs/HPCasCode/roles:/usr/share/ansible/roles:/etc/ansible/roles #syslog_facility =  deprecation_warnings = False # Ansible Vault settings ask_vault_pass = False vault_password_file = ~/.ansible/bin/passwd [inventory] cache = True enable_plugins = openstack.cloud.openstack,script,yaml [ssh_connection] ssh_args = -o StrictHostKeyChecking=accept-new  plugin: openstack.cloud.openstack # ~/.ansible/hosts/openstack.yaml # https://docs.ansible.com/ansible/latest/collections/openstack/cloud/openstack_inventory.html # https://github.com/openstack/ansible-collections-openstack/blob/master/plugins/inventory/openstack.py cache: yes compose: ansible_host: openstack.public_v4 | default(openstack.private_v4, true) ansible_ssh_host: openstack.public_v4 | default(openstack.private_v4, true) ansible_user: openstack.metadata.ansible_user | default(\u0026amp;#34;ubuntu\u0026amp;#34;) expand_hostvars: no #fail_on_errors: yes #all_projects: yes ## Allows the use of `groups` csv server metadata field legacy_groups: yes groups: cvl_uwa: openstack.name.endswith(\u0026amp;#39;cvl.uwa.edu.au\u0026amp;#39;) or (openstack.metadata.project_name == \u0026amp;#34;CVLCLUSTER\u0026amp;#34;) keyed_groups: - prefix: project_name key: openstack.location.project.name leading_separator: no  ","date":1634129778,"description":"","lastmod":"2021-10-13T20:56:18+08:00","objectID":"acc04243795f6a58529dfcbfa4695cb5","permalink":"https://www.cerds.org.au/accs/cvl/tech/ansible/","publishdate":"2021-10-13T20:56:18+08:00","title":"Ansible"},{"content":"# Create initial CVL Stack openstack --os-cloud nimbus-cvl stack create -e env.yaml -t stack.yaml cvl # Update Stack on changes openstack --os-cloud nimbus-cvl stack update -e env.yaml -t stack.yaml cvl  Example Environment file  --- # env.yaml # Heat environment file parameters: dns_domain: uwa.edu.au floating_network: \u0026amp;#34;Public external\u0026amp;#34; floating_subnet: \u0026amp;#34;public-external-subnet\u0026amp;#34; image: \u0026amp;#34;Pawsey - Ubuntu 20.04 - 2021-02\u0026amp;#34; image_gpu: \u0026amp;#34;Pawsey - Ubuntu 20.04 - vGPU CUDA 11 - 2021-06\u0026amp;#34; key_name: DEP53766 network_external: \u0026amp;#34;Public external\u0026amp;#34; subnet_pool: rfc1918 server_cpu_count: 0 server_gpu_count: 0 server_login_count: 0 server_mgmt_count: 0 resource_registry: \u0026amp;#34;OS::Custom::Server\u0026amp;#34;: file:///path/to/server.yaml   Heat Orchestration Template (HOT)  heat_template_version: 2018-08-31 description: OS::Custom::Server parameters: name: { type: string } image: { type: string } flavor: { type: string } key_name: { type: string } metadata: { type: json, default: \u0026amp;#39;{}\u0026amp;#39; } network: { type: string } networks: { type: json, default: [] } floating_network: { type: string, default: \u0026amp;#34;None\u0026amp;#34; } security_groups: { type: json } conditions: expose: not: equals: - { get_param: floating_network } - \u0026amp;#34;None\u0026amp;#34; resources: port: type: OS::Neutron::Port properties: network: { get_param: network } security_groups: { get_param: security_groups } floating_ip: type: OS::Neutron::FloatingIP properties: floating_network: { get_param: floating_network } port_id: { get_resource: port } condition: expose server: type: OS::Nova::Server properties: flavor: { get_param: flavor } image: { get_param: image } key_name: { get_param: key_name } metadata: { get_param: metadata } name: { get_param: name } networks: list_concat: - [{ port: { get_resource: port } }] - { get_param: networks } user_data: str_replace: params: ${HOSTNAME}: { get_param: name } template: |#cloud-config fqdn: ${HOSTNAME} locale: en_AU.utf8 timezone: Australia/Perth packages: - â€¦","date":1632360780,"description":"","lastmod":"2021-09-23T09:33:00+08:00","objectID":"dc703806bea61173bc2dd40f2ad0e581","permalink":"https://www.cerds.org.au/accs/cvl/tech/openstack/","publishdate":"2021-09-23T09:33:00+08:00","title":"OpenStack"},{"content":"","date":1632360780,"description":"","lastmod":"2021-09-23T09:33:00+08:00","objectID":"e15a40c9740d459124e453a6b5c2cb45","permalink":"https://www.cerds.org.au/accs/cvl/user/","publishdate":"2021-09-23T09:33:00+08:00","title":"User documents"},{"content":"The cluster is accessible via https://desktop.cvl.org.au/strudel-web/#/system-selector (CVL@UWA dropdown)\nJoin an existing project  Login to https://hpc.erc.monash.edu.au/aafbootstrap with AAF credentials. Click on \u0026amp;ldquo;Join existing project\u0026amp;rdquo; and enter project ID.  Create a new project  Login to https://hpc.erc.monash.edu.au/aafbootstrap with AAF credentials. Fill in the New Project Form.  More information can be found here.\n","date":1634650860,"description":"","lastmod":"2021-10-19T21:41:00+08:00","objectID":"92d92e39ee0985f32c0ac4b75b2bc6d3","permalink":"https://www.cerds.org.au/accs/cvl/user/access/","publishdate":"2021-10-19T21:41:00+08:00","title":"Access CVL@UWA"},{"content":"","date":-62135596800,"description":"","objectID":"b27f7053c3ddb488a806516256af4980","permalink":"https://www.cerds.org.au/ais/","title":"Australian Imaging Service (AIS)"},{"content":"","date":-62135596800,"description":"","objectID":"7db2dda52e62735d37d6441d710a7662","permalink":"https://www.cerds.org.au/ais/tech/ml_clara/","title":"Machine Learning (ML) and Clara"},{"content":"","date":-62135596800,"description":"","objectID":"29efcf6e6162857233026f812e71833e","permalink":"https://www.cerds.org.au/ais/xnat/","title":"XNAT"},{"content":"Why at UWA? ARCOS have been working with the national community with the aim of establishing a national Kubernetes service.\nThe CeRDS team have been active members of the ARCOS working groups for some time and have acknowledged the benefits that participation within this community can bring. It is no secret that the concepts of \u0026amp;ldquo;Cloud Native\u0026amp;rdquo; and \u0026amp;ldquo;Hybrid Cloud\u0026amp;rdquo; are permeating in to all areas of information technology including supporting services for research. What is usually missing is a plain explanation as to why\u0026amp;hellip; So here is my attempt.\n The most powerful advantage IMHO is that the \u0026amp;ldquo;Cloud\u0026amp;rdquo;, while conjuring up images of white fluffy unicorns, can with some wizardry, not only incorporate large scale Corporate base infrastructure but also (and wait for it) incorporate an edge service like a data collector (think IoT), server (what we in the IT industry lovingly call spinning rust) dedicated to things like data pre-processing as well as your very own laptop. This essentially means that complex services running at multiple locations can be managed with better security and less overheads paving the way for systems that run where it makes sense. Trust me, this is very cool and provides an environment where new services and processes can thrive. Many practices come along with this type of change. I\u0026amp;rsquo;m going to rattle of some terms you may have heard, so here goes, Continuous Integration and Continuous Deployment (CI/CD), DevSecOps (shortened from the words Development, Security, Operations), Infrastructure as Code (IoC). There are many more but you get the point. All of these terms mean pretty much the same thing, faster, safer, cheaper, more consistent outcomes starting from the formation of an idea all the way to the end product including support. Sound like something you need? Lots more to come but I need to get on with other stuff\u0026amp;hellip; Will get back to this shortly.  This community has been investigating the benefits â€¦","date":1635909360,"description":"","lastmod":"2021-11-03T11:16:00+08:00","objectID":"2c3c8dcbaf22f95f35193116c9d7b593","permalink":"https://www.cerds.org.au/arcos/","publishdate":"2021-11-03T11:16:00+08:00","title":"Australian Research Container Orchestration Services (ARCOS)"},{"content":"","date":-62135596800,"description":"","objectID":"5290c23d7eecf660c6a290f0c66cdaa0","permalink":"https://www.cerds.org.au/infrastructure/","title":"Infrastructure as Code (IaC)"},{"content":"JAAS\nClient setup sudo snap install juju --classic Simplestreams $ openstack image list $ cd $(mktemp -d) $ mkdir simplestreams $ juju metadata generate-image -a amd64 -d ./simplestreams -i 90303547-6dd7-42f8-a173-fe4f5902ed30 -r RegionOne -s focal -u https://nimbus.pawsey.org.au:5000/v3 $ juju metadata generate-image -a amd64 -d ./simplestreams -i 3a0daf62-69f0-42fd-90ff-e8fea01f7531 -r RegionOne -s bionic -u https://nimbus.pawsey.org.au:5000/v3 Image metadata files have been written to: /tmp/tmp.GTcJ2OUBed/simplestreams/images/streams/v1. For Juju to use this metadata, the files need to be put into the image metadata search path. There are 2 options: 1. For local access, use the --metadata-source parameter when bootstrapping: juju bootstrap --metadata-source /tmp/tmp.GTcJ2OUBed/simplestreams [...] 2. For remote access, use image-metadata-url attribute for model configuration. To set it as a default for any model or for the controller model, it needs to be supplied as part of --model-default to \u0026amp;#39;juju bootstrap\u0026amp;#39; command. See \u0026amp;#39;bootstrap\u0026amp;#39; help for more details. For configuration for a particular model, set it as --image-metadata-url on \u0026amp;#39;juju model-config\u0026amp;#39;. See \u0026amp;#39;model-config\u0026amp;#39; help for more details. Regardless of where this attribute is used, it expects a reachable URL. You need to configure a http server to serve the contents of /tmp/tmp.GTcJ2OUBed/simplestreams and set the value of image-metadata-url accordingly. $ cd simplestreams $ mc mb store/simplestreams $ mc cp -r * store/simplestreams $ mc policy set download store/simplestreams $ cd $(mktemp -d) $ mc mirror store/simplestreams $ juju metadata generate-image -a amd64 -d . -i f210c2f1-2d03-4e07-80ab-cf606d550d69 -r RegionOne -s bionic -u https://nimbus.pawsey.org.au:5000/v3 $ mc mirror . store/simplesreams --overrite Can be accessed via the url https://store.s3.cerds.org.au/simplestreams\nBootstrap controller $ juju bootstrap --bootstrap-series=focal â€¦","date":-62135596800,"description":"","objectID":"4b6ce4c366250b91366b939cdf6070d2","permalink":"https://www.cerds.org.au/infrastructure/juju/","title":"Juju"},{"content":"","date":-62135596800,"description":"","objectID":"25671cf6ec7a6557f2b1814a1c1bed70","permalink":"https://www.cerds.org.au/infrastructure/kubernetes/","title":"Kubernetes, Helm and Kustomize"}]