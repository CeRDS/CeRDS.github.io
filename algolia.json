[{"content":"Characterisation eResearch \u0026amp;amp; Data Science As part of the Center for Microscopy, Characterisation and Analysis within The University of Western Australia, we enable research excellence by providing world-class microscopy and microanalysis facilities and expertise to publicly funded researchers and industry.\n","date":1632361500,"description":"","lastmod":"2021-09-23T09:45:00+08:00","objectID":"3976528693a0108357f4928017600865","permalink":"https://cerds.github.io/","publishdate":"2021-09-23T09:45:00+08:00","title":"CeRDS"},{"content":"Overview CVL@UWA is a part of the Characterisation Virtual Laboratory National project. It is hosted at the Pawsey Supercomputing Centre primarily within the Nimbus Cloud Service.\nThis page outlines the UWA implementation of CVL housed at Pawsey. It contains details about design decisions, workflows, tools and other miscellaneous material.\nDevSecOps Ansible OpenStack heat_template_version: 2018-08-31 description: Characterisation Virtual Laboratory parameters: dns_domain: type: string label: DNS domain description: DNS domain default: uwa.edu.au dns_nameservers: type: comma_delimited_list label: DNS name servers description: A comma delimited list of name servers default: [\u0026amp;#34;1.1.1.1\u0026amp;#34;,\u0026amp;#34;8.8.8.8\u0026amp;#34;] flavor: type: string label: Instance type description: Image flavor to use for compute nodes default: n3.4c16r flavor_gpu: type: string label: Instance type vGPU description: Image flavor to use for GPU compute nodes default: r1.V100-4C flavor_gpu_large: type: string label: Instance type vGPU description: Image flavor to use for GPU compute nodes default: r1.V100-8C floating_network: type: string label: Floating network name description: Floating network name default: \u0026amp;#34;None\u0026amp;#34; floating_subnet: type: string label: Floating subnet description: Floating subnet image: type: string label: Image name description: Image name as server base default: \u0026amp;#34;Pawsey - Ubuntu 20.04 - 2021-02\u0026amp;#34; image_gpu: type: string label: Image name GPU description: Image name for server base (GPU) key_name: type: string label: Key name description: Name of key-pair to be used for compute instance default: DEP53766 network_external: type: string label: External network description: ID or name of the external network default: \u0026amp;#34;Public external\u0026amp;#34; security_group_rules: type: json label: Firewall rules description: Additional firewall rules default: [] server_cpu_count: type: number label: Compute node count description: Number of compute nodes to create default: 0 …","date":1632360780,"description":"","lastmod":"2021-09-23T09:33:00+08:00","objectID":"e11b3f764cf9c5cf894f8120f4fe7e99","permalink":"https://cerds.github.io/accs/cvl/","publishdate":"2021-09-23T09:33:00+08:00","title":"CVL@UWA"},{"content":"JAAS\nClient setup sudo snap install juju --classic Simplestreams $ openstack image list $ cd $(mktemp -d) $ mkdir simplestreams $ juju metadata generate-image -a amd64 -d ./simplestreams -i 90303547-6dd7-42f8-a173-fe4f5902ed30 -r RegionOne -s focal -u https://nimbus.pawsey.org.au:5000/v3 $ juju metadata generate-image -a amd64 -d ./simplestreams -i 3a0daf62-69f0-42fd-90ff-e8fea01f7531 -r RegionOne -s bionic -u https://nimbus.pawsey.org.au:5000/v3 Image metadata files have been written to: /tmp/tmp.GTcJ2OUBed/simplestreams/images/streams/v1. For Juju to use this metadata, the files need to be put into the image metadata search path. There are 2 options: 1. For local access, use the --metadata-source parameter when bootstrapping: juju bootstrap --metadata-source /tmp/tmp.GTcJ2OUBed/simplestreams [...] 2. For remote access, use image-metadata-url attribute for model configuration. To set it as a default for any model or for the controller model, it needs to be supplied as part of --model-default to \u0026#39;juju bootstrap\u0026#39; command. See \u0026#39;bootstrap\u0026#39; help for more details. For configuration for a particular model, set it as --image-metadata-url on \u0026#39;juju model-config\u0026#39;. See \u0026#39;model-config\u0026#39; help for more details. Regardless of where this attribute is used, it expects a reachable URL. You need to configure a http server to serve the contents of /tmp/tmp.GTcJ2OUBed/simplestreams and set the value of image-metadata-url accordingly. $ cd simplestreams $ mc mb store/simplestreams $ mc cp -r * store/simplestreams $ mc policy set download store/simplestreams $ cd $(mktemp -d) $ mc mirror store/simplestreams $ juju metadata generate-image -a amd64 -d . -i f210c2f1-2d03-4e07-80ab-cf606d550d69 -r RegionOne -s bionic -u https://nimbus.pawsey.org.au:5000/v3 $ mc mirror . store/simplesreams --overrite Can be accessed via the url https://store.s3.cerds.org.au/simplestreams\nBootstrap controller $ juju bootstrap --bootstrap-series=focal …","date":-62135596800,"description":"","objectID":"7e580e0e954ad49e7f1de97e242f4db8","permalink":"https://cerds.github.io/deployments/juju/","title":"Juju deployment"}]